

Only affecting P1.1
P1DIR |= BIT1;  // Set OUTPUT
P1DIR &= ~BIT1; // Set INPUT
P1OUT |= BIT1;  // Output HIGH
P1OUT &= ~BIT1; // Output LOW
P1OUT ^= BIT1;  // Toggle 
P1REN |= BIT1;  // Enable Pull UP/Down resistor 
  P1OUT |= BIT1;  // pull-up resistor
  P1OUT &= ~BIT1; // pull-down resistor
P1IES |= BIT1   // Interrupt on falling edge
P1IFG &= ~BIT3; // Clear interrupt flag 


Interrupt: 

  /* ---- P1.2 interrupt ---- */
  P1DIR &= ~BIT2; // P1.2 INPUT 
  P1REN |= BIT2;  // P1.2 enable pull resistor
  P1OUT |= BIT2;  // p1.2 pull-down resistor active low 
  
  P1IE |= BIT2; // enable interrupts P1.2
  P1IES |= BIT2; // set edge: falling 
  
  P1IFG &= ~BIT2; // clear interrupts flags on P1.2 

__attribute__((interrupt(PORT1_VECTOR)))
void Port_1(void) {
    if (P1IFG & BIT2) {

        P1IFG &= ~BIT2; // clear interrupt flasgs on P1.2 
    }
}

void mcu_init(void)
{
  WDTCTL = WDTPW + WDTHOLD;
  __enable_interrupt();
}


